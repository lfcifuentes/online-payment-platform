// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "Luis Cifuentes",
            "url": "https://lfcifuentes.netlify.app",
            "email": "lfcifuentes28@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/pay": {
            "post": {
                "description": "Pay",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payments"
                ],
                "summary": "Pay",
                "parameters": [
                    {
                        "description": "Pay",
                        "name": "pay",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/valueobjects.PayParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Payment"
                        }
                    }
                }
            }
        },
        "/payment-methods/{user_code}": {
            "get": {
                "description": "List payment methods",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "List payment methods",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User code",
                        "name": "user_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.PaymentMethod"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Create payment method",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User code",
                        "name": "user_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payment Method",
                        "name": "payment_method",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.PaymentMethod"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment-methods/{user_code}/{payment_method_id}": {
            "delete": {
                "description": "Delete payment method",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Payment Methods"
                ],
                "summary": "Delete payment method",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User code",
                        "name": "user_code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Payment Method ID",
                        "name": "payment_method_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "gin.H": {
            "type": "object",
            "additionalProperties": {}
        },
        "models.Payment": {
            "type": "object",
            "required": [
                "amount",
                "bank_id",
                "payment_method_id",
                "receiver_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "payment_method_id": {
                    "type": "integer"
                },
                "receiver_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PaymentMethod": {
            "type": "object",
            "properties": {
                "bank_id": {
                    "type": "integer"
                },
                "brand": {
                    "type": "string"
                },
                "card_number": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "exp_month": {
                    "type": "integer"
                },
                "exp_year": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "last4": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "valueobjects.CreateClientRequest": {
            "type": "object",
            "required": [
                "bank_id",
                "email",
                "name"
            ],
            "properties": {
                "bank_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "valueobjects.PayParams": {
            "type": "object",
            "required": [
                "amount",
                "bank_id",
                "payment_method_id",
                "receiver_id"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "bank_id": {
                    "type": "integer"
                },
                "payment_method_id": {
                    "type": "integer"
                },
                "receiver_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Bank Simulator API",
	Description:      "This is a simple Bank Simulator API documentation.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
